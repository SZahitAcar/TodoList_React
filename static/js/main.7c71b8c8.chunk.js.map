{"version":3,"sources":["components/Form.jsx","components/Todo.jsx","components/List.jsx","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","setTodos","todos","inputText","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","List","filteredTodos","App","useState","status","setFilteredTodos","useEffect","localTodos","JSON","parse","localStorage","getItem","getLocalTodos","filterHandler","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c71b8c8.chunk.js","sourcesContent":["import React from \"react\"\n\nconst Form = ({ setInputText, setTodos, todos, inputText, setStatus}) => {\n\n    const inputTextHandler = (e) => {\n        setInputText(e.target.value)\n    }\n    const submitTodoHandler = (e) =>{\n        e.preventDefault()\n        setTodos([\n            ...todos, {text : inputText, completed: false, id: Math.random() * 1000}\n        ])\n        setInputText(\"\")\n    }\n    const statusHandler = (e) => {\n        setStatus(e.target.value);\n        \n    }\n\n    return(\n        <form>\n        <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\n        <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\n            <i className=\"fas fa-plus-square\"></i>\n        </button>\n        <div onChange={statusHandler} className=\"select\">\n            <select name=\"todos\" className=\"filter-todo\">\n            <option value=\"all\">All</option>\n            <option value=\"completed\">Completed</option>\n            <option value=\"uncompleted\">Uncompleted</option>\n            </select>\n        </div>\n    </form>\n    )\n}\n\nexport default Form;","import React from 'react'\n\nconst Todo = ({todos, setTodos, text, todo}) => {\n    const deleteHandler = () => {\n        // Delete item from state (Best Practice)\n        setTodos(todos.filter((el)=> el.id !== todo.id))\n    }\n    const completeHandler = () => {\n        setTodos(todos.map(item=> {\n            if(item.id===todo.id){\n                return {\n                    ...item, completed: !item.completed\n                }\n            } \n            return item;\n        }\n        ))\n    }\n    return (\n        <div className=\"todo\">\n            <li className={`todo-item ${todo.completed ? \"completed\": \"\"}`}>{text}</li>\n            <button onClick={completeHandler} className=\"complete-btn\">\n                <i className=\"fas fa-check\"></i>\n            </button>\n            <button onClick={deleteHandler} className=\"trash-btn\">\n                <i className=\"fas fa-trash\"></i>\n            </button>\n        </div>\n    )\n}\n\nexport default Todo","import React from \"react\"\nimport Todo from \"./Todo\"\n\n\nconst List = ({todos, setTodos, filteredTodos}) => {\n    return(\n    <div className=\"todo-container\">\n    <ul className=\"todo-list\">\n      {filteredTodos.map(todo=> (<Todo setTodos={setTodos} key={todo.id} text={todo.text} todos={todos} todo={todo}></Todo>))}\n    </ul>\n  </div>\n  )\n}\n\nexport default List;","import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport Form from \"./components/Form\";\nimport List from \"./components/List\";\n\nfunction App() {\n  // State Parts\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  //Handlers\n  const filterHandler = () => {\n    switch (status) {\n      case \"completed\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === true));\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n  //Save Local Storage\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n  const getLocalTodos = () => {\n    let localTodos = JSON.parse(localStorage.getItem(\"todos\"));\n    setTodos(localTodos);\n  };\n  //UseEffects\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>To Do App</h1>\n      </header>\n      <Form\n        todos={todos}\n        setTodos={setTodos}\n        setInputText={setInputText}\n        inputText={inputText}\n        setStatus={setStatus}\n      ></Form>\n      <List\n        filteredTodos={filteredTodos}\n        todos={todos}\n        setTodos={setTodos}\n        inputText={inputText}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}